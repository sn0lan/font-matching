{
  "name": "zipfile",
  "version": "0.3.4",
  "main": "./lib/index.js",
  "description": "C++ library for handling zipfiles in node",
  "keywords": [
    "zipfile",
    "uncompress",
    "unzip",
    "zlib"
  ],
  "url": "http://github.com/springmeyer/node-zipfile",
  "repositories": [
    {
      "type": "git",
      "url": "git://github.com/springmeyer/node-zipfile.git"
    }
  ],
  "author": {
    "name": "Dane Springmeyer",
    "email": "dane@dbsgeo.com"
  },
  "contributors": [],
  "licenses": [
    "BSD"
  ],
  "dependencies": {},
  "devDependencies": {
    "mocha": "*",
    "mkdirp": "~0.3.0",
    "jshint": "~0.5.x"
  },
  "bin": {
    "unzip.js": "./bin/unzip.js"
  },
  "directories": {
    "examples": "examples",
    "src": "src"
  },
  "engines": {
    "node": ">= 0.6.13 && < 0.9.0"
  },
  "scripts": {
    "install": "node-waf configure build",
    "test": "make test"
  },
  "readme": "# node-zipfile\n      \nBindings to [libzip](http://nih.at/libzip/libzip.html) for handling zipfile archives in [node](http://nodejs.org).\n\n\n## Example\n\n    var zipfile = require('zipfile');\n    var zf = new zipfile.ZipFile('./test/data/world_merc.zip');\n    zf\n    { names: [ 'world_merc.dbf', 'world_merc.prj', 'world_merc.shp', 'world_merc.shx' ],\n      count: 4 }\n    var buffer = zf.readFileSync('world_merc.prj');\n    buffer.toString()\n    'PROJCS[\"Google Maps Global Mercator\",GEOGCS .... '\n\n\n## Depends\n\nnode-zipfile 0.3.x depends on node v0.6 and above\n\nnode-zipfile 0.1.x-0.2.x works with node v0.2-v0.4\n\nlibzip (optionally, otherwise will build against bundled version)\n\n\n## Installation\n\nYou can install the latest tag via npm:\n\n    npm install zipfile\n\nOr install from github master:\n\n    git clone git://github.com/springmeyer/node-zipfile.git\n    cd node-zipfile\n    ./configure\n    make\n    make install\n\n\n## Dynamically linking against libzip\n\nnode-zipfile depends on libzip, but by default\nbundles a copy in deps/ which is statically linked.\n\nIf you want to use an external libzip first install it:\n\nDebian:\n\n    sudo apt-get install libzip-dev libzip1\n\nOS X:\n  \n    brew install libzip\n\nOr from source:\n\n    wget http://nih.at/libzip/libzip-0.10.tar.bz2\n    tar xvf libzip-0.10.tar.bz2\n    cd libzip-0.10\n    ./configure\n    make\n    sudo make install\n\nThen on linux do:\n\n    sudo ldconfig\n\nNow, configure node-zipfile with the --shared-libzip option:\n \n    ./configure --shared-libzip\n\nIf you installed libzip in a custom location then configure like:\n  \n    ./configure --shared-libzip --libzip=/opt/local\n\nOtherwise /usr/ and /usr/local will be searched for libzip:\n\n    ./configure --shared-libzip\n    make\n    sudo make install\n    ./test.js\n\n## Building libzip with cmake on windows:\n\nNote: needs cygwin so the .sh shell scripts work that libzip cmake files call.\n\n    git clone git://github.com/springmeyer/node-zipfile.git\n    cd node-zipfile/deps/\n    bsdtar xvf libzip-0.10.tar.bz2\n    cd libzip\n    mkdir build_vc100\n    cd build_vc100\n    cmake -DZLIB_LIBRARY=c:\\dev2\\zlib\\zlib.lib -DZLIB_INCLUDE_DIR=c:\\dev2\\zlib -G\"NMake Makefiles\" -DCMAKE_BUILD_TYPE=Release ..\\\n\nThen edit lib\\zipconf.h removing 'inttypes.h' with:\n\n    #include <stdint.h>\n    #include <limits.h>\n\nFinally build libzip\n\n    nmake /f Makefile zip\n    \nThen compile node-zipfile:\n\n    TODO\n \n\n## License\n\n  BSD, see LICENSE.txt",
  "readmeFilename": "README.md",
  "_id": "zipfile@0.3.4",
  "dist": {
    "shasum": "d6d63153a84b8c4aebd5755f6fdda49cf633478f"
  },
  "_from": "zipfile@",
  "_resolved": "https://registry.npmjs.org/zipfile/-/zipfile-0.3.4.tgz"
}
